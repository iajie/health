<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--配置可匿名访问的资源-->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/login.html"/>

    <!--
        auto-config：是否开启自动配置，是否自动应用一些默认配置，比如框架会提供一个默认的登录页面
        use-expressions：是否使用spring-security提供的表达式来描述权限
    -->
    <security:http auto-config="true" use-expressions="true">
        <security:headers>
            <!-- 设置在页面中可以通过iframe访问受保护的页面，默认是不允许访问的 -->
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!--
            配置拦截规则， /**表示拦截所有后台页面，只有认证通过后才能访问
            pattern:描述拦截规则
            access：指定所需的访问角色或访问权限
        -->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>
        <!--
             自定义登陆页面，配置表单，将页面提交的数据交给权限框架处理
             login-page：指定登录页面访问的url
             username-parameter：表单提交的用户名
             password-parameter：表单提交的密码
             login-processing-url：表单提交的路径
             default-target-url：登录成功后跳转的页面
             authentication-failure-url：验证失败后跳转的路径
        -->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             authentication-failure-url="/login.html"/>
        <!--
            csrf：对应CsrfFilter过滤器
            disabled：是否启用CsrfFilter过滤器，使用自定义登录页面就需要关掉该过滤器
        -->
        <security:csrf disabled="true"/>
        <!--
            logout：退出登录
            logout-url：退出登录操作请求的路径
            logout-success-url：退出成功后跳转的页面
            invalidate-session：退出后是否清除Session
        -->
        <security:logout logout-url="/logout.do"
                         logout-success-url="/login.html"
                         invalidate-session="true"/>
    </security:http>

    <!-- 配置认证管理器 -->
    <security:authentication-manager>
        <!-- 配置认证提供者 -->
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <!--指定对密码进行加密的对象-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置密码加密对象-->
    <bean name="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启注解方式控制权限-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>